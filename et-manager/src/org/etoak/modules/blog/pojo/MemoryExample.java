package org.etoak.modules.blog.pojo;

import java.util.ArrayList;
import java.util.List;

public class MemoryExample {
    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table memory
     * @mbggenerated  Fri Apr 28 10:41:06 CST 2017
     */
    protected String orderByClause;
    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table memory
     * @mbggenerated  Fri Apr 28 10:41:06 CST 2017
     */
    protected boolean distinct;
    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table memory
     * @mbggenerated  Fri Apr 28 10:41:06 CST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table memory
     * @mbggenerated  Fri Apr 28 10:41:06 CST 2017
     */
    public MemoryExample()
    {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table memory
     * @mbggenerated  Fri Apr 28 10:41:06 CST 2017
     */
    public void setOrderByClause(String orderByClause)
    {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table memory
     * @mbggenerated  Fri Apr 28 10:41:06 CST 2017
     */
    public String getOrderByClause()
    {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table memory
     * @mbggenerated  Fri Apr 28 10:41:06 CST 2017
     */
    public void setDistinct(boolean distinct)
    {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table memory
     * @mbggenerated  Fri Apr 28 10:41:06 CST 2017
     */
    public boolean isDistinct()
    {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table memory
     * @mbggenerated  Fri Apr 28 10:41:06 CST 2017
     */
    public List<Criteria> getOredCriteria()
    {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table memory
     * @mbggenerated  Fri Apr 28 10:41:06 CST 2017
     */
    public void or(Criteria criteria)
    {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table memory
     * @mbggenerated  Fri Apr 28 10:41:06 CST 2017
     */
    public Criteria or()
    {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table memory
     * @mbggenerated  Fri Apr 28 10:41:06 CST 2017
     */
    public Criteria createCriteria()
    {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0)
        {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table memory
     * @mbggenerated  Fri Apr 28 10:41:06 CST 2017
     */
    protected Criteria createCriteriaInternal()
    {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table memory
     * @mbggenerated  Fri Apr 28 10:41:06 CST 2017
     */
    public void clear()
    {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator. This class corresponds to the database table memory
     * @mbggenerated  Fri Apr 28 10:41:06 CST 2017
     */
    protected abstract static class GeneratedCriteria
    {
        protected List<Criterion> criteria;
        
        protected GeneratedCriteria()
        {
            super();
            criteria = new ArrayList<Criterion>();
        }
        
        public boolean isValid()
        {
            return criteria.size() > 0;
        }
        
        public List<Criterion> getAllCriteria()
        {
            return criteria;
        }
        
        public List<Criterion> getCriteria()
        {
            return criteria;
        }
        
        protected void addCriterion(String condition)
        {
            if (condition == null)
            {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }
        
        protected void addCriterion(String condition, Object value, String property)
        {
            if (value == null)
            {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }
        
        protected void addCriterion(String condition, Object value1, Object value2, String property)
        {
            if (value1 == null || value2 == null)
            {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }
        
        public Criteria andIDIsNull()
        {
            addCriterion("ID is null");
            return (Criteria)this;
        }
        
        public Criteria andIDIsNotNull()
        {
            addCriterion("ID is not null");
            return (Criteria)this;
        }
        
        public Criteria andIDEqualTo(Integer value)
        {
            addCriterion("ID =", value, "ID");
            return (Criteria)this;
        }
        
        public Criteria andIDNotEqualTo(Integer value)
        {
            addCriterion("ID <>", value, "ID");
            return (Criteria)this;
        }
        
        public Criteria andIDGreaterThan(Integer value)
        {
            addCriterion("ID >", value, "ID");
            return (Criteria)this;
        }
        
        public Criteria andIDGreaterThanOrEqualTo(Integer value)
        {
            addCriterion("ID >=", value, "ID");
            return (Criteria)this;
        }
        
        public Criteria andIDLessThan(Integer value)
        {
            addCriterion("ID <", value, "ID");
            return (Criteria)this;
        }
        
        public Criteria andIDLessThanOrEqualTo(Integer value)
        {
            addCriterion("ID <=", value, "ID");
            return (Criteria)this;
        }
        
        public Criteria andIDIn(List<Integer> values)
        {
            addCriterion("ID in", values, "ID");
            return (Criteria)this;
        }
        
        public Criteria andIDNotIn(List<Integer> values)
        {
            addCriterion("ID not in", values, "ID");
            return (Criteria)this;
        }
        
        public Criteria andIDBetween(Integer value1, Integer value2)
        {
            addCriterion("ID between", value1, value2, "ID");
            return (Criteria)this;
        }
        
        public Criteria andIDNotBetween(Integer value1, Integer value2)
        {
            addCriterion("ID not between", value1, value2, "ID");
            return (Criteria)this;
        }
        
        public Criteria andNAMEIsNull()
        {
            addCriterion("NAME is null");
            return (Criteria)this;
        }
        
        public Criteria andNAMEIsNotNull()
        {
            addCriterion("NAME is not null");
            return (Criteria)this;
        }
        
        public Criteria andNAMEEqualTo(String value)
        {
            addCriterion("NAME =", value, "NAME");
            return (Criteria)this;
        }
        
        public Criteria andNAMENotEqualTo(String value)
        {
            addCriterion("NAME <>", value, "NAME");
            return (Criteria)this;
        }
        
        public Criteria andNAMEGreaterThan(String value)
        {
            addCriterion("NAME >", value, "NAME");
            return (Criteria)this;
        }
        
        public Criteria andNAMEGreaterThanOrEqualTo(String value)
        {
            addCriterion("NAME >=", value, "NAME");
            return (Criteria)this;
        }
        
        public Criteria andNAMELessThan(String value)
        {
            addCriterion("NAME <", value, "NAME");
            return (Criteria)this;
        }
        
        public Criteria andNAMELessThanOrEqualTo(String value)
        {
            addCriterion("NAME <=", value, "NAME");
            return (Criteria)this;
        }
        
        public Criteria andNAMELike(String value)
        {
            addCriterion("NAME like", value, "NAME");
            return (Criteria)this;
        }
        
        public Criteria andNAMENotLike(String value)
        {
            addCriterion("NAME not like", value, "NAME");
            return (Criteria)this;
        }
        
        public Criteria andNAMEIn(List<String> values)
        {
            addCriterion("NAME in", values, "NAME");
            return (Criteria)this;
        }
        
        public Criteria andNAMENotIn(List<String> values)
        {
            addCriterion("NAME not in", values, "NAME");
            return (Criteria)this;
        }
        
        public Criteria andNAMEBetween(String value1, String value2)
        {
            addCriterion("NAME between", value1, value2, "NAME");
            return (Criteria)this;
        }
        
        public Criteria andNAMENotBetween(String value1, String value2)
        {
            addCriterion("NAME not between", value1, value2, "NAME");
            return (Criteria)this;
        }
        
        public Criteria andADRESSIsNull()
        {
            addCriterion("ADRESS is null");
            return (Criteria)this;
        }
        
        public Criteria andADRESSIsNotNull()
        {
            addCriterion("ADRESS is not null");
            return (Criteria)this;
        }
        
        public Criteria andADRESSEqualTo(String value)
        {
            addCriterion("ADRESS =", value, "ADRESS");
            return (Criteria)this;
        }
        
        public Criteria andADRESSNotEqualTo(String value)
        {
            addCriterion("ADRESS <>", value, "ADRESS");
            return (Criteria)this;
        }
        
        public Criteria andADRESSGreaterThan(String value)
        {
            addCriterion("ADRESS >", value, "ADRESS");
            return (Criteria)this;
        }
        
        public Criteria andADRESSGreaterThanOrEqualTo(String value)
        {
            addCriterion("ADRESS >=", value, "ADRESS");
            return (Criteria)this;
        }
        
        public Criteria andADRESSLessThan(String value)
        {
            addCriterion("ADRESS <", value, "ADRESS");
            return (Criteria)this;
        }
        
        public Criteria andADRESSLessThanOrEqualTo(String value)
        {
            addCriterion("ADRESS <=", value, "ADRESS");
            return (Criteria)this;
        }
        
        public Criteria andADRESSLike(String value)
        {
            addCriterion("ADRESS like", value, "ADRESS");
            return (Criteria)this;
        }
        
        public Criteria andADRESSNotLike(String value)
        {
            addCriterion("ADRESS not like", value, "ADRESS");
            return (Criteria)this;
        }
        
        public Criteria andADRESSIn(List<String> values)
        {
            addCriterion("ADRESS in", values, "ADRESS");
            return (Criteria)this;
        }
        
        public Criteria andADRESSNotIn(List<String> values)
        {
            addCriterion("ADRESS not in", values, "ADRESS");
            return (Criteria)this;
        }
        
        public Criteria andADRESSBetween(String value1, String value2)
        {
            addCriterion("ADRESS between", value1, value2, "ADRESS");
            return (Criteria)this;
        }
        
        public Criteria andADRESSNotBetween(String value1, String value2)
        {
            addCriterion("ADRESS not between", value1, value2, "ADRESS");
            return (Criteria)this;
        }
        
        public Criteria andCOVER_ONEIsNull()
        {
            addCriterion("COVER_ONE is null");
            return (Criteria)this;
        }
        
        public Criteria andCOVER_ONEIsNotNull()
        {
            addCriterion("COVER_ONE is not null");
            return (Criteria)this;
        }
        
        public Criteria andCOVER_ONEEqualTo(String value)
        {
            addCriterion("COVER_ONE =", value, "COVER_ONE");
            return (Criteria)this;
        }
        
        public Criteria andCOVER_ONENotEqualTo(String value)
        {
            addCriterion("COVER_ONE <>", value, "COVER_ONE");
            return (Criteria)this;
        }
        
        public Criteria andCOVER_ONEGreaterThan(String value)
        {
            addCriterion("COVER_ONE >", value, "COVER_ONE");
            return (Criteria)this;
        }
        
        public Criteria andCOVER_ONEGreaterThanOrEqualTo(String value)
        {
            addCriterion("COVER_ONE >=", value, "COVER_ONE");
            return (Criteria)this;
        }
        
        public Criteria andCOVER_ONELessThan(String value)
        {
            addCriterion("COVER_ONE <", value, "COVER_ONE");
            return (Criteria)this;
        }
        
        public Criteria andCOVER_ONELessThanOrEqualTo(String value)
        {
            addCriterion("COVER_ONE <=", value, "COVER_ONE");
            return (Criteria)this;
        }
        
        public Criteria andCOVER_ONELike(String value)
        {
            addCriterion("COVER_ONE like", value, "COVER_ONE");
            return (Criteria)this;
        }
        
        public Criteria andCOVER_ONENotLike(String value)
        {
            addCriterion("COVER_ONE not like", value, "COVER_ONE");
            return (Criteria)this;
        }
        
        public Criteria andCOVER_ONEIn(List<String> values)
        {
            addCriterion("COVER_ONE in", values, "COVER_ONE");
            return (Criteria)this;
        }
        
        public Criteria andCOVER_ONENotIn(List<String> values)
        {
            addCriterion("COVER_ONE not in", values, "COVER_ONE");
            return (Criteria)this;
        }
        
        public Criteria andCOVER_ONEBetween(String value1, String value2)
        {
            addCriterion("COVER_ONE between", value1, value2, "COVER_ONE");
            return (Criteria)this;
        }
        
        public Criteria andCOVER_ONENotBetween(String value1, String value2)
        {
            addCriterion("COVER_ONE not between", value1, value2, "COVER_ONE");
            return (Criteria)this;
        }
        
        public Criteria andP_ALLIsNull()
        {
            addCriterion("P_ALL is null");
            return (Criteria)this;
        }
        
        public Criteria andP_ALLIsNotNull()
        {
            addCriterion("P_ALL is not null");
            return (Criteria)this;
        }
        
        public Criteria andP_ALLEqualTo(String value)
        {
            addCriterion("P_ALL =", value, "p_ALL");
            return (Criteria)this;
        }
        
        public Criteria andP_ALLNotEqualTo(String value)
        {
            addCriterion("P_ALL <>", value, "p_ALL");
            return (Criteria)this;
        }
        
        public Criteria andP_ALLGreaterThan(String value)
        {
            addCriterion("P_ALL >", value, "p_ALL");
            return (Criteria)this;
        }
        
        public Criteria andP_ALLGreaterThanOrEqualTo(String value)
        {
            addCriterion("P_ALL >=", value, "p_ALL");
            return (Criteria)this;
        }
        
        public Criteria andP_ALLLessThan(String value)
        {
            addCriterion("P_ALL <", value, "p_ALL");
            return (Criteria)this;
        }
        
        public Criteria andP_ALLLessThanOrEqualTo(String value)
        {
            addCriterion("P_ALL <=", value, "p_ALL");
            return (Criteria)this;
        }
        
        public Criteria andP_ALLLike(String value)
        {
            addCriterion("P_ALL like", value, "p_ALL");
            return (Criteria)this;
        }
        
        public Criteria andP_ALLNotLike(String value)
        {
            addCriterion("P_ALL not like", value, "p_ALL");
            return (Criteria)this;
        }
        
        public Criteria andP_ALLIn(List<String> values)
        {
            addCriterion("P_ALL in", values, "p_ALL");
            return (Criteria)this;
        }
        
        public Criteria andP_ALLNotIn(List<String> values)
        {
            addCriterion("P_ALL not in", values, "p_ALL");
            return (Criteria)this;
        }
        
        public Criteria andP_ALLBetween(String value1, String value2)
        {
            addCriterion("P_ALL between", value1, value2, "p_ALL");
            return (Criteria)this;
        }
        
        public Criteria andP_ALLNotBetween(String value1, String value2)
        {
            addCriterion("P_ALL not between", value1, value2, "p_ALL");
            return (Criteria)this;
        }
        
        public Criteria andDESCPTIONIsNull()
        {
            addCriterion("DESCPTION is null");
            return (Criteria)this;
        }
        
        public Criteria andDESCPTIONIsNotNull()
        {
            addCriterion("DESCPTION is not null");
            return (Criteria)this;
        }
        
        public Criteria andDESCPTIONEqualTo(String value)
        {
            addCriterion("DESCPTION =", value, "DESCPTION");
            return (Criteria)this;
        }
        
        public Criteria andDESCPTIONNotEqualTo(String value)
        {
            addCriterion("DESCPTION <>", value, "DESCPTION");
            return (Criteria)this;
        }
        
        public Criteria andDESCPTIONGreaterThan(String value)
        {
            addCriterion("DESCPTION >", value, "DESCPTION");
            return (Criteria)this;
        }
        
        public Criteria andDESCPTIONGreaterThanOrEqualTo(String value)
        {
            addCriterion("DESCPTION >=", value, "DESCPTION");
            return (Criteria)this;
        }
        
        public Criteria andDESCPTIONLessThan(String value)
        {
            addCriterion("DESCPTION <", value, "DESCPTION");
            return (Criteria)this;
        }
        
        public Criteria andDESCPTIONLessThanOrEqualTo(String value)
        {
            addCriterion("DESCPTION <=", value, "DESCPTION");
            return (Criteria)this;
        }
        
        public Criteria andDESCPTIONLike(String value)
        {
            addCriterion("DESCPTION like", value, "DESCPTION");
            return (Criteria)this;
        }
        
        public Criteria andDESCPTIONNotLike(String value)
        {
            addCriterion("DESCPTION not like", value, "DESCPTION");
            return (Criteria)this;
        }
        
        public Criteria andDESCPTIONIn(List<String> values)
        {
            addCriterion("DESCPTION in", values, "DESCPTION");
            return (Criteria)this;
        }
        
        public Criteria andDESCPTIONNotIn(List<String> values)
        {
            addCriterion("DESCPTION not in", values, "DESCPTION");
            return (Criteria)this;
        }
        
        public Criteria andDESCPTIONBetween(String value1, String value2)
        {
            addCriterion("DESCPTION between", value1, value2, "DESCPTION");
            return (Criteria)this;
        }
        
        public Criteria andDESCPTIONNotBetween(String value1, String value2)
        {
            addCriterion("DESCPTION not between", value1, value2, "DESCPTION");
            return (Criteria)this;
        }
        
        public Criteria andSPAREIsNull()
        {
            addCriterion("SPARE is null");
            return (Criteria)this;
        }
        
        public Criteria andSPAREIsNotNull()
        {
            addCriterion("SPARE is not null");
            return (Criteria)this;
        }
        
        public Criteria andSPAREEqualTo(String value)
        {
            addCriterion("SPARE =", value, "SPARE");
            return (Criteria)this;
        }
        
        public Criteria andSPARENotEqualTo(String value)
        {
            addCriterion("SPARE <>", value, "SPARE");
            return (Criteria)this;
        }
        
        public Criteria andSPAREGreaterThan(String value)
        {
            addCriterion("SPARE >", value, "SPARE");
            return (Criteria)this;
        }
        
        public Criteria andSPAREGreaterThanOrEqualTo(String value)
        {
            addCriterion("SPARE >=", value, "SPARE");
            return (Criteria)this;
        }
        
        public Criteria andSPARELessThan(String value)
        {
            addCriterion("SPARE <", value, "SPARE");
            return (Criteria)this;
        }
        
        public Criteria andSPARELessThanOrEqualTo(String value)
        {
            addCriterion("SPARE <=", value, "SPARE");
            return (Criteria)this;
        }
        
        public Criteria andSPARELike(String value)
        {
            addCriterion("SPARE like", value, "SPARE");
            return (Criteria)this;
        }
        
        public Criteria andSPARENotLike(String value)
        {
            addCriterion("SPARE not like", value, "SPARE");
            return (Criteria)this;
        }
        
        public Criteria andSPAREIn(List<String> values)
        {
            addCriterion("SPARE in", values, "SPARE");
            return (Criteria)this;
        }
        
        public Criteria andSPARENotIn(List<String> values)
        {
            addCriterion("SPARE not in", values, "SPARE");
            return (Criteria)this;
        }
        
        public Criteria andSPAREBetween(String value1, String value2)
        {
            addCriterion("SPARE between", value1, value2, "SPARE");
            return (Criteria)this;
        }
        
        public Criteria andSPARENotBetween(String value1, String value2)
        {
            addCriterion("SPARE not between", value1, value2, "SPARE");
            return (Criteria)this;
        }
    }

    /**
     * This class was generated by MyBatis Generator. This class corresponds to the database table memory
     * @mbggenerated  Fri Apr 28 10:41:06 CST 2017
     */
    public static class Criterion
    {
        private String condition;
        
        private Object value;
        
        private Object secondValue;
        
        private boolean noValue;
        
        private boolean singleValue;
        
        private boolean betweenValue;
        
        private boolean listValue;
        
        private String typeHandler;
        
        public String getCondition()
        {
            return condition;
        }
        
        public Object getValue()
        {
            return value;
        }
        
        public Object getSecondValue()
        {
            return secondValue;
        }
        
        public boolean isNoValue()
        {
            return noValue;
        }
        
        public boolean isSingleValue()
        {
            return singleValue;
        }
        
        public boolean isBetweenValue()
        {
            return betweenValue;
        }
        
        public boolean isListValue()
        {
            return listValue;
        }
        
        public String getTypeHandler()
        {
            return typeHandler;
        }
        
        protected Criterion(String condition)
        {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }
        
        protected Criterion(String condition, Object value, String typeHandler)
        {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>)
            {
                this.listValue = true;
            }
            else
            {
                this.singleValue = true;
            }
        }
        
        protected Criterion(String condition, Object value)
        {
            this(condition, value, null);
        }
        
        protected Criterion(String condition, Object value, Object secondValue, String typeHandler)
        {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }
        
        protected Criterion(String condition, Object value, Object secondValue)
        {
            this(condition, value, secondValue, null);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table memory
     *
     * @mbggenerated do_not_delete_during_merge Mon Apr 24 14:11:07 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}